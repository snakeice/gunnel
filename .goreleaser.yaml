# GoReleaser configuration
# Documentation at https://goreleaser.com

version: 2

# Project configuration
project_name: gunnel

# Git configuration
git:
  # What to do with the git tag after the release.
  # Valid options are:
  # - skip: Don't touch the tag at all (default)
  # - remove: Remove the tag after the release
  tag_sort: -version:refname

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: gunnel
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
      - freebsd
    goarch:
      - amd64
      - arm
      - arm64
      - 386
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
      - goos: freebsd
        goarch: arm
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    binary: gunnel

archives:
  - id: gunnel
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - LICENSE
      - README.md
      - example/*.yaml

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^style:'
      - '^refactor:'
      - Merge pull request
      - Merge branch
  groups:
    - title: 'Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Security'
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: Others
      order: 999

# Docker images using standard format (dockers_v2 requires GoReleaser v2.12+)
dockers:
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
      - "--label=org.opencontainers.image.description=A fast and secure tunnel for exposing local services"
      - "--label=org.opencontainers.image.licenses=MIT"
    extra_files:
      - go.mod
      - go.sum
      - pkg/
      - cmd/
      - main.go
      - example/

nfpms:
  - id: packages
    homepage: https://github.com/{{ .Env.GITHUB_REPOSITORY }}
    description: "A fast and secure tunnel for exposing local services"
    maintainer: "Gunnel Developers <dev@gunnel.io>"
    license: MIT
    vendor: Gunnel
    formats:
      - apk
      - deb
      - rpm
    recommends:
      - systemd
    contents:
      - src: example/server.yaml
        dst: /etc/gunnel/server.yaml
        type: config
      - src: example/client.yaml
        dst: /etc/gunnel/client.yaml
        type: config
      - src: init/gunnel.service
        dst: /usr/lib/systemd/system/gunnel.service
      - src: init/gunnel-client.service
        dst: /usr/lib/systemd/system/gunnel-client.service

release:
  # GitHub release configuration
  # The repository information will be auto-detected from git remote
  prerelease: auto
  draft: false
  name_template: "{{.ProjectName}} v{{.Version}}"
  footer: |
    ## Docker Images

    ```bash
    # Server
    docker run -p 8081:8081 -p 80:80 -p 443:443 \
      -v ./server.yaml:/config/server.yaml \
      ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }} \
      server -c /config/server.yaml

    # Client
    docker run \
      -v ./client.yaml:/config/client.yaml \
      ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }} \
      client -c /config/client.yaml
    ```

    ## Installation

    ### Linux/macOS/BSD
    ```bash
    curl -sSL https://raw.githubusercontent.com/{{ .Env.GITHUB_REPOSITORY }}/main/install.sh | sh
    ```

    ### Homebrew
    ```bash
    brew install {{ .Env.GITHUB_REPOSITORY_OWNER }}/tap/gunnel
    ```

    ### Go
    ```bash
    go install github.com/{{ .Env.GITHUB_REPOSITORY }}@latest
    ```
